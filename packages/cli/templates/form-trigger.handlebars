<html lang='en'>
	<head>
		<meta charset='UTF-8' />
		<meta name='viewport' content='width=device-width, initial-scale=1.0' />
		<link rel='icon' type='image/png' href='https://n8n.io/favicon.ico' />
		<link
			href='http://fonts.googleapis.com/css?family=Open+Sans'
			rel='stylesheet'
			type='text/css'
		/>
		<title>{{formTitle}}</title>
		<style>
			*,
			::after,
			::before {
				box-sizing: border-box;
				margin: 0;
				padding: 0;
			}

			body {
				font-family:
					Open Sans,
					sans-serif;
				font-weight: 400;
				font-size: 12px;
				display: flex;
				flex-direction: column;
				justify-content: start;
				background-color: #fbfcfe;
			}

			.container {
				margin: auto;
				text-align: center;
				padding-top: 24px;
				width: 448px;
			}

			.test-notice {
				padding: 12px 24px;
				color: #e6a23d;
				background-color: #fefaf6;
				border-radius: 8px;
				border: 1px solid #f6dcb7;
				font-size: 12px;
				font-weight: 400;
				line-height: 16px;
				text-align: left;
				margin-bottom: 16px;
			}

			.card {
				padding: 24px;
				background-color: white;
				border: 1px solid #dbdfe7;
				border-radius: 8px;
				box-shadow: 0px 4px 16px 0px #634dff0f;
				margin-bottom: 16px;
			}

			.n8n-link a {
				color: #7e8186;
				font-weight: 600;
				font-size: 12px;
				text-decoration: none;
			}

			.n8n-link svg {
				display: inline-block;
				vertical-align: middle;
			}

			.form-header h1 {
				color: #525356;
				font-size: 20px;
				font-weight: 400;
			}

			.form-header p {
				padding-top: 8px;
				color: #7e8186;
				font-size: 14px;
				font-weight: 400;
			}

			.inputs-wrapper {
				padding-top: 24px;
				padding-bottom: 24px;
			}

			form label {
				display: block;
				text-align: left;
				font-size: 14px;
				font-weight: 600;
				color: #555555;
				padding-bottom: 6px;
			}

			form .form-input {
				border: 1px solid #dbdfe7;
				border-radius: 6px;
				width: 100%;
				font-size: 14px;
				color: #909399;
				font-weight: 400;
				padding: 12px;
			}

			form input:focus {
				outline: none;
				border-color: rgb(90, 76, 194);
			}

			.select-input {
				border: 1px solid #dbdfe7;
				border-radius: 6px;
			}

			.select-input:focus-within {
				border: 1px solid rgb(90, 76, 194);
			}

			form select {
				outline: transparent;
				border: none;
				border-radius: 6px;
				width: 100%;
				font-size: 14px;
				color: #909399;
				font-weight: 400;
				background-color: white;
				padding: 12px;
				border-right: 12px solid transparent;
			}

			input[type='date'] {
				font-family:
					Open Sans,
					sans-serif;
			}

			#submit-btn {
				width: 100%;
				height: 48px;
				padding: 12px;
				border-radius: 6px;
				border: 0;
				font-size: 14px;
				font-weight: 600;
				font-family:
					Open Sans,
					sans-serif;
				background-color: #ff6d5a;
				color: #ffffff;
				cursor: pointer;
			}

			#submit-btn span {
				padding-right: 6px;
				display: none;
			}

			#submit-btn span svg {
				display: inline-block;
				vertical-align: middle;
				fill: #ffffff;
				animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
			}

			@keyframes lds-ring {
				0% {
					transform: rotate(0deg);
				}
				100% {
					transform: rotate(360deg);
				}
			}

			#submit-btn:hover {
				opacity: 0.7;
			}

			.error-hidden {
				display: block;
				position: relative;
				color: #ea1f30;
				text-align: left;
				font-size: 12px;
				font-weight: 400;
				visibility: hidden;
				padding-top: 6px;
				padding-bottom: 9px;
			}

			.error-show {
				visibility: visible;
			}

			/* multiselect ----------------------------------- */
			.multiselect {
				padding-left: 6px;
				padding-right: 6px;
			}

			.multiselect-option {
				padding-top: 6px;
				display: flex;
			}

			.multiselect-option label {
				padding-left: 12px;
				color: #7e8186;
				font-weight: 400;
				cursor: pointer;
			}

			.multiselect-checkbox {
				vertical-align: middle;
			}

			input[type='checkbox'] {
				width: 18px;
				height: 18px;
				cursor: pointer;
			}

			.form-required {
			}
		</style>
	</head>

	<body>
		<div class='container'>
			<section>
				{{#if testRun}}
					<div class='test-notice'>
						<p>This is test version of your form. Use it only for testing your Form Trigger.</p>
					</div>
				{{/if}}

				{{#if validForm}}
					<form class='card' action='#' method='POST' name='n8n-form' id='n8n-form' novalidate>
						<div class='form-header'>
							<h1>{{formTitle}}</h1>
							<p>{{formDescription}} </p>
						</div>

						<div class='inputs-wrapper'>
							{{#each formFields}}
								{{#if isMultiSelect}}
									<div>
										<label class='form-label'>{{label}}</label>
										<div class='multiselect {{inputRequired}}' id='{{id}}'>
											{{#each multiSelectOptions}}
												<div class='multiselect-option'>
													<input type='checkbox' class='multiselect-checkbox' id='{{id}}' />
													<label for='{{id}}'>{{label}}</label>
												</div>
											{{/each}}
										</div>
										<p class='{{errorId}} error-hidden'>
											This field is required
										</p>
									</div>
								{{/if}}

								{{#if isSelect}}
									<div class='form-group'>
										<label class='form-label' for='{{id}}'>{{label}}</label>
										<div class='select-input'>
											<select id='{{id}}' name='{{id}}' class='{{inputRequired}}'>
												<option value='' disabled selected>Select an option ...</option>
												{{#each selectOptions}}
													<option value='{{this}}'>{{this}}</option>
												{{/each}}
											</select>
										</div>
										<p class='{{errorId}} error-hidden'>
											This field is required
										</p>
									</div>
								{{/if}}

								{{#if isTextarea}}
									<div class='form-group'>
										<label class='form-label' for='{{id}}'>{{label}}</label>
										<textarea
											class='form-input {{inputRequired}}'
											id='{{id}}'
											name='{{id}}'
										></textarea>
										<p class='{{errorId}} error-hidden'>
											This field is required
										</p>
									</div>
								{{/if}}

								{{#if isInput}}
									<div class='form-group'>
										<label class='form-label' for='{{id}}'>{{label}}</label>
										<input
											class='form-input {{inputRequired}}'
											type='{{type}}'
											id='{{id}}'
											name='{{id}}'
										/>
										<p class='{{errorId}} error-hidden'>
											This field is required
										</p>
									</div>
								{{/if}}
							{{/each}}
						</div>

						<button id='submit-btn' type='submit'>
							<span><svg
									xmlns='http://www.w3.org/2000/svg'
									height='18px'
									viewBox='0 0 512 512'
								><!--! Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
									<path
										d='M304 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zm0 416a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM48 304a48 48 0 1 0 0-96 48 48 0 1 0 0 96zm464-48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM142.9 437A48 48 0 1 0 75 369.1 48 48 0 1 0 142.9 437zm0-294.2A48 48 0 1 0 75 75a48 48 0 1 0 67.9 67.9zM369.1 437A48 48 0 1 0 437 369.1 48 48 0 1 0 369.1 437z'
									/>
								</svg></span>
							Submit form
						</button>
					</form>
				{{else}}
					<div class='card'>
						<div class='form-header'>
							{{#if testRun}}
								<h1>Please add at least one field to your form</h1>
							{{else}}
								<h1>Problem loading form</h1>
								<p>
									This usually occurs if the n8n workflow serving this form is deactivated or no
									longer exist
								</p>
							{{/if}}
						</div>
					</div>
				{{/if}}

				<div class='card' id='submitted-form' style='display: none;'>
					<div class='form-header'>
						<h1 id='submitted-header'>Form Submited</h1>
						{{#if formSubmittedText}}
							<p id='submitted-content'>
								{{formSubmittedText}}
							</p>
						{{/if}}
					</div>
				</div>

				{{#if redirectUrl}}
					<a id='redirectUrl' href='{{redirectUrl}}' style='display: none;'></a>
				{{/if}}
				<input id="useResponseData" style="display: none;" value={{useResponseData}} />
			</section>
		</div>
		<script>
			function validateInput(input, errorElement) {
				if (input.type === 'number' && input.value !== '') {
					const value = input.value.trim();

					if (value === '' || isNaN(value)) {
						errorElement.textContent = 'Enter only numbers in this field';
						errorElement.classList.add('error-show');
						return false;
					} else {
						errorElement.classList.remove('error-show');
						return true;
					}
				} else if (input.value === '') {
					errorElement.classList.add('error-show');
					return false;
				} else {
					errorElement.classList.remove('error-show');
					return true;
				}
			}

			function getSelectedValues(input) {
				const selectedValues = [];
				const checkboxes = input.querySelectorAll('.multiselect-checkbox');

				checkboxes.forEach((checkbox, index) => {
					if (checkbox.checked) {
						const label = input.querySelectorAll('label')[index];
						selectedValues.push(label.textContent.trim());
					}
				});

				return selectedValues;
			}

			function validateMultiselect(input, errorElement) {
				const selectedValues = getSelectedValues(input);

				if (!selectedValues.length) {
					errorElement.classList.add('error-show');
					return false;
				} else {
					errorElement.classList.remove('error-show');
					return true;
				}
			}

			const form = document.querySelector('#n8n-form');

			const requiredInputs = document.querySelectorAll('.form-required');

			requiredInputs.forEach((input) => {
				const errorSelector = `.error-${input.id}`;
				const error = document.querySelector(errorSelector);

				if (input.classList.contains('multiselect')) {
					input.addEventListener('click', () => {
						validateMultiselect(input, error);
					});
				} else {
					input.addEventListener('blur', () => {
						validateInput(input, error);
					});
					input.addEventListener('input', () => {
						error.classList.remove('error-show');
					});
				}
			});

			form.addEventListener('submit', (e) => {
				const valid = [];
				e.preventDefault();

				requiredInputs.forEach((input) => {
					const errorSelector = `.error-${input.id}`;
					const error = document.querySelector(errorSelector);

					if (input.classList.contains('multiselect')) {
						valid.push(validateMultiselect(input, error));
					} else {
						valid.push(validateInput(input, error));
					}
				});

				if (valid.every((v) => v)) {
					var formData = new FormData(form);

					document.querySelectorAll('.multiselect').forEach((multiselect) => {
						const selectedValues = getSelectedValues(multiselect);
						formData.append(multiselect.id, JSON.stringify(selectedValues));
					});

					document.querySelector('#submit-btn').disabled = true;
					document.querySelector('#submit-btn').style.cursor = 'not-allowed';
					document.querySelector('#submit-btn span').style.display = 'inline-block';
					fetch('', {
						method: 'POST',
						body: formData,
					})
						.then(async function (response) {
							const useResponseData = document.getElementById("useResponseData").value;

							if (useResponseData === "true") {
								const text = await response.text();
								let json;

								try{
									json = JSON.parse(text);
								} catch (e) {}

								if (json?.redirectURL) {
									const url = json.redirectURL.includes("://") ? json.redirectURL : "https://" + json.redirectURL;
									window.location.replace(url);
								} else if (json?.formSubmittedText) {
									form.style.display = 'none';
									document.querySelector('#submitted-form').style.display = 'block';
									document.querySelector('#submitted-content').textContent = json.formSubmittedText;
								} else {
									document.body.innerHTML = text;
								}
								return;
							}

							if (response.status === 200) {
								const redirectUrl = document.getElementById("redirectUrl");
								if (redirectUrl) {
									window.location.replace(redirectUrl.href);
								} else {
									form.style.display = 'none';
									document.querySelector('#submitted-form').style.display = 'block';
								}
							} else {
								form.style.display = 'none';
								document.querySelector('#submitted-form').style.display = 'block';
								document.querySelector('#submitted-header').textContent = 'Problem submitting response';
								document.querySelector('#submitted-content').textContent =
									'An error occurred in the workflow handling this form';
							}

							return;
						})
						.catch(function (error) {
							console.error('Error:', error);
						});
				}
			});
		</script>
	</body>
</html>
